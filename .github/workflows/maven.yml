# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: project cicd flow 

on:
  push:
    branches: [ master ] 
  pull_request:
    branches: [ master ] 

jobs:
  build-code: 
  
    runs-on: ubuntu-latest 

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: '1.8'
        distribution: 'adopt'
        cache: maven
    - name: Build source code into jar file with Maven
      run: |
           mvn -B package --file pom.xml
           mkdir artifacts && cp target/*.jar artifacts
           cd artifacts && ls
    - name: Saving the artifact 
      uses: actions/upload-artifact@v2
      with:
        name: Springboot artifact
        path: artifacts
        
  Pushing-Artifact-to-Jfrog_Repo:
    name: Pushing-Artifact-to-Jfrog_Repo
    runs-on: ubuntu-latest
    needs: [build-code]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: Springboot artifact
      - run: ls
          
      - name: Setting up Jfrog-CLI
        uses: jfrog/setup-jfrog-cli@v2
      #run: jf --version
      - name: Pushing the built artifact to Jfrog repository
        run: jf rt upload cz-springboot-welcome.jar maven-demo --url=https://cloudzenix.jfrog.io/artifactory/ --user=renuka.prasad@cloudzenix.com --password=Prasad@123
      #run: jf rt upload artifacts/cz-springboot-welcome.jar maven-demo --url=cloudzenix.jfrog.io --user=renuka.prasad@cloudzenix.com --password=Prasad@123
  
  Build-Docker_image_and_Push_to_Jfrog: 
  
    name: Build-Docker_image_and_Push_to_Jfrog
    runs-on: ubuntu-latest
    needs: [Pushing-Artifact-to-Jfrog_Repo]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: Springboot artifact
      - run: |
           mkdir target && cp *.jar target
           cd target && ls
 
      - name: Build & Push Docker image to JFrog-Artifact repo
        run: |
          docker login -uckreddy459@gmail.com -p Dev$3Ops2022 cjf.jfrog.io
        #  docker build -t cloudzenix.jfrog.io/docker-repo/cz-springboot-welcome:latest .
        #  docker push cloudzenix.jfrog.io/docker-repo/cz-springboot-welcome:latest

  Build-Docker_image_and_Push_to_DockerHub: 
  
 
    name: Build-Docker_image_and_Push_to_DockerHub
    runs-on: ubuntu-latest
    needs: [Build-Docker_image_and_Push_to_Jfrog]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: Springboot artifact
      - run: |
           mkdir target && cp *.jar target
           cd target && ls
   
      - name: Build & push Docker image to Docker-Hub          
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: cloudzenix/cz-springboot-welcome
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }} 
    


     
